name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run Biome
        run: pnpm run check

      - name: Type check
        run: pnpm run type-check

  test:
    name: Test Suite
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm run test:run

      - name: Run tests with coverage
        run: pnpm run test:coverage

      - name: Coverage Summary
        run: |
          # Run tests with coverage and capture output
          TEST_OUTPUT=$(pnpm run test:coverage 2>&1)

          echo "## ðŸ“Š Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Extract test results
          TEST_COUNT=$(echo "$TEST_OUTPUT" | grep -o '[0-9]\+ passed' | head -1 | grep -o '[0-9]\+')
          OVERALL_COVERAGE=$(echo "$TEST_OUTPUT" | grep "All files" | awk '{print $3}')

          # Add coverage table
          echo "| File | Statements | Branches | Functions | Lines |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------------|----------|-----------|-------|" >> $GITHUB_STEP_SUMMARY

          # Parse coverage and add to summary
          echo "$TEST_OUTPUT" | grep -E "^\s*(All files|[a-z-]+\.ts)" | while read line; do
            if [[ $line == *"All files"* ]]; then
              echo "| **Overall** | $(echo $line | awk '{print $3}') | $(echo $line | awk '{print $4}') | $(echo $line | awk '{print $5}') | $(echo $line | awk '{print $6}') |" >> $GITHUB_STEP_SUMMARY
            elif [[ $line == *.ts* ]]; then
              filename=$(echo $line | awk '{print $1}')
              echo "| $filename | $(echo $line | awk '{print $3}') | $(echo $line | awk '{print $4}') | $(echo $line | awk '{print $5}') | $(echo $line | awk '{print $6}') |" >> $GITHUB_STEP_SUMMARY
            fi
          done

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… **${TEST_COUNT} tests passed** with **${OVERALL_COVERAGE} overall coverage**" >> $GITHUB_STEP_SUMMARY

  test-e2e:
    name: E2E Test with github-typescript
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      deployments: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      # Install main package dependencies and build. These steps are only
      # necessary because the example used for the e2e tewst is resolving
      # utils via file:../../ to use the current local version of the package.
      # Normally, the dependency would be the published version of the package.
      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm run build

      # Install scripts dependencies (including local utils via file:../../)
      - name: Setup scripts dependencies
        run: |
          cd .github/scripts
          pnpm install

      # Run the example script through the published wrapper
      - name: Run E2E test via github-typescript
        uses: tkstang/github-typescript@v1
        with:
          ts-file: .github/scripts/example.ts
          node-version: "22"
          args: |
            {
              "testMessage": "Hello E2E Test!",
              "testLabels": ["e2e-test", "automated"],
              "testBranch": "main"
            }

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test, test-e2e]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Check build artifacts
        run: |
          ls -la dist/
          test -f dist/index.js
          test -f dist/index.d.ts

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  publish-dry-run:
    name: Publish (Dry Run)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Publish dry run
        run: pnpm publish --dry-run
